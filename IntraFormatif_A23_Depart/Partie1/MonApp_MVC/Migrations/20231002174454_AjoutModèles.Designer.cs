// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonApp_MVC.Data;

#nullable disable

namespace MonApp_MVC.Migrations
{
    [DbContext(typeof(MonAppDbContext))]
    [Migration("20231002174454_AjoutModèles")]
    partial class AjoutModèles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EquipeTournoi", b =>
                {
                    b.Property<int>("EquipesId")
                        .HasColumnType("int");

                    b.Property<int>("TournoisId")
                        .HasColumnType("int");

                    b.HasKey("EquipesId", "TournoisId");

                    b.HasIndex("TournoisId");

                    b.ToTable("EquipeTournoi");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Proprietaire")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.FicheOfficielle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Biographie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FicheOfficielle");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.Joueur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.Property<int>("FicheOfficielleId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.HasIndex("FicheOfficielleId")
                        .IsUnique();

                    b.ToTable("Joueur");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.Tournoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Tournoi");
                });

            modelBuilder.Entity("EquipeTournoi", b =>
                {
                    b.HasOne("MonApp_MVC.Entities.Equipe", null)
                        .WithMany()
                        .HasForeignKey("EquipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonApp_MVC.Entities.Tournoi", null)
                        .WithMany()
                        .HasForeignKey("TournoisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MonApp_MVC.Entities.Joueur", b =>
                {
                    b.HasOne("MonApp_MVC.Entities.Equipe", "Equipe")
                        .WithMany("Joueurs")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonApp_MVC.Entities.FicheOfficielle", "FicheOfficielle")
                        .WithOne("Joueur")
                        .HasForeignKey("MonApp_MVC.Entities.Joueur", "FicheOfficielleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("FicheOfficielle");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.Equipe", b =>
                {
                    b.Navigation("Joueurs");
                });

            modelBuilder.Entity("MonApp_MVC.Entities.FicheOfficielle", b =>
                {
                    b.Navigation("Joueur")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
